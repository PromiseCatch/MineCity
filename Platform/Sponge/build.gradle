buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'org.spongepowered:mixingradle:0.7+'
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    shadow project(':Reactive')
    compile 'org.spongepowered:spongeapi:7.2+'
    //compile 'org.spongepowered:spongecommon:5.1.0-SNAPSHOT:dev'
    compile 'org.spongepowered:mixin:0.8.5'
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
//    makeObfSourceJar = false
//
//    replace '@VERSION@', project.version
//    replace '@DESC@', 'City based protection plugin'
}

mixin {
    config 'mixins.minecity.json'
}

sourceSets {
    main {
        ext.refMap = "mixins.minecity.refmap.json"
    }
}

configurations {
    shadow
    compile.extendsFrom shadow
}

shadowJar {
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]

    dependencies {
        include(dependency({ it.moduleGroup == project.group }))
        include(dependency('org.codehaus.groovy:groovy-all'))
        include(dependency('org.jetbrains:annotations'))
    }

    exclude 'dummyThing'

    classifier null
}

reobf {
    shadowJar {}
}

jar {
    manifest.attributes(
            'FMLCorePluginContainsFMLMod': 'true',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'mixins.minecity.json',
            'ForceLoadAsMod': 'true',
            "Specification-Title": "minecity",
            "Specification-Vendor": "minecity",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "minecity",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    )


}
jar.finalizedBy("reobfJar")



